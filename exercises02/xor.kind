type PairBool {
    new(fst: Bool, snd: Bool)
}


// Returns true if both Pairs are different
// eql(PairBool.new(false, false), PairBool.new(true, true)) -> true 
// eql(PairBool.new(true, false), PairBool.new(true, false)) -> false
xor2(a: PairBool, b: PairBool): Bool
    case a {
        new: case b {
            new:
            let noeqlfst = Bool.eql(a.fst, b.fst)
            let noeqlsnd = Bool.eql(a.snd, b.snd)
            case noeqlfst {
                true: Bool.false
                false: case noeqlsnd {
                    true: Bool.false
                    false: Bool.true
                }
            }
        }
    }

xor: Bool
    xor2((PairBool.new(Bool.true, Bool.true)),(PairBool.new(Bool.false, Bool.false)))